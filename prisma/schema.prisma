generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Foods {
  id              String            @id @default(cuid())
  name            String            @db.VarChar(40)
  description     String            @db.VarChar(200)
  price           Decimal           @db.Decimal(10, 2)
  img             String
  MonstersOnFoods MonstersOnFoods[]
  CarrinhosonFood CarrinhosonFood[]

  @@map("food")
}

model Monsters {
  id              String            @id @default(cuid())
  name            String
  desc            String
  img             String
  MonstersOnFoods MonstersOnFoods[]

  @@map("monster")
}

model MonstersOnFoods {
  id         String   @id @default(cuid())
  food_id    String
  monster_id String
  monster    Monsters @relation(fields: [monster_id], references: [id])
  food       Foods    @relation(fields: [food_id], references: [id])

  @@map("monster_on_food")
}

model Produtos {
  id          String     @id @default(cuid())
  id_food     String
  id_carrinho String
  amount      Int
  price       Decimal
  Carrinhos   Carrinhos? @relation(fields: [carrinhosId], references: [id])
  carrinhosId String?

  @@map("produto")
}

model Carrinhos {
  id              String            @id @default(cuid())
  items           Produtos[]
  user_id         String
  total           Decimal
  sold            Boolean           @default(false)
  CarrinhosonFood CarrinhosonFood[]

  @@map("carrinho")
}

model Users {
  id       String  @id @default(cuid())
  name     String
  email    String  @unique
  password String
  admin    Boolean @default(false)
  // recuperação


  @@map("user")
}

model CarrinhosonFood {
  id          String    @id @default(cuid())
  food_id     String
  carrinho_id String
  carrinho    Carrinhos @relation(fields: [carrinho_id], references: [id])
  food        Foods     @relation(fields: [food_id], references: [id])
}
